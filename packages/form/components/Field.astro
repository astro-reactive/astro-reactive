---
import type { FormControl } from '../core/form-control';

export interface Props {
	control: FormControl;
}

const { control } = Astro.props;

const { validators = [] } = control;

const validatorAttirbutes: Record<string, string> = validators?.reduce(
	(prev, validator) => {
		const split: string[] = validator.split(':');
		const label: string = `data-label-${split[0]}`;
		const value: string = split.length > 1 ? split[1] ?? 'invalid' : 'true';

		return {
			...prev,
			[label]: value,
		};
	},

	{}
);
---

<div>
	{
		control.label && control.labelPosition === 'left' && (
			<label for={control.name}>{control.label}</label>
		)
	}

	<input
		name={control.name}
		id={control.name}
		type={control.type}
		value={control.value}
		checked={control.value === 'checked'}
		placeholder={control.placeholder}
		data-label={control.label}
		data-label-position={control.labelPosition}
		{...validatorAttirbutes}
	/>

	{
		control.label && control.labelPosition === 'right' && (
			<label for={control.name}>{control.label}</label>
		)
	}
</div>
