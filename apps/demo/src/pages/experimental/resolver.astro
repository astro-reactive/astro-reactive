---
import type { Submit } from '@astro-reactive/common';
import Form, { FormGroup } from '@astro-reactive/form';
import { z } from 'zod';
import Layout from '../../components/Layout.astro';
import { zodResolver } from '@astro-reactive/resolvers/zod';

const zodSchema = z.object({
	name: z.string(),
	email: z.string().email(),
	age: z.number().optional(),
	familySize: z.any(),
});

type FieldValues = z.infer<typeof zodSchema>;

const formGroup = new FormGroup<FieldValues>(
	[
		{ name: 'name', label: 'Name' },
		{ name: 'email', label: 'Email', placeholder: 'Please type your email' },
		{ name: 'age', label: 'Age' },
		{
			name: 'familySize',
			label: 'Family Size',
			type: 'dropdown',
			options: ['1', '2', '3', '4'],
		},
	],
	{ validationSchema: zodResolver(zodSchema) }
);

const submit: Submit = {
	name: 'submit',
	type: 'submit',
	value: "Let's go!",
};
---

<Layout title="Schema Builder Resolver">
	<Form validateOnLoad showValidationHints formGroups={[formGroup]} submitControl={submit} />
	<pre>{JSON.stringify(formGroup.controls.map(control => ({ name : control.name,validators : control.validators })), null, 2)}</pre>
</Layout>
